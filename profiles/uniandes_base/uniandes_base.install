<?php
/**
 * @file
 * Install, update and uninstall functions for the standard installation profile.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */

function uniandes_base_install(){

  set_time_limit( 99999 );
  variable_set('clean_url', 1);
  variable_set('uniandes_custom_color_primario', "fff200");
  variable_set('uniandes_custom_color_secundario', "484851");
variable_set('final-install', 0);
  $enable = array(
		'uniandes_base',
  );
  theme_enable($enable);

  /*$lang = array_keys( language_list( ) );
  if( $lang[0]=="en" ){
    locale_add_language( "es" );
  }
  else{
    locale_add_language( "en" );
  }

  $negotation = array(
  LOCALE_LANGUAGE_NEGOTIATION_URL => 2,
  );
language_negotiation_set(LANGUAGE_TYPE_INTERFACE, $negotation);*/

  variable_set('theme_default','uniandes_base');
  variable_set('admin_theme', 'seven');

  theme_disable( array( "bartik" ) );

  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);


  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  // Enable some standard blocks.
  $default_theme = 'uniandes_base';
  $admin_theme = 'seven';
  $blocks = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
	/*
    array(
      'module' => 'search',
      'delta' => 'form',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -1,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
	*/
    array(
      'module' => 'node',
      'delta' => 'recent',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'dashboard_main',
      'pages' => '',
      'cache' => -1,
    ),
	/*
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'navigation',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
	*/
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'new',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'dashboard_sidebar',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'search',
      'delta' => 'form',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => -10,
      'region' => 'dashboard_sidebar',
      'pages' => '',
      'cache' => -1,
    ),
  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($blocks as $block) {
    $query->values($block);
  }
  $query->execute();

  ///////////////////////////////// --------------------------- CREANDO VOCABULARIOS -------------------- /////////////////////////////////////////////

  // Insert default pre-defined node types into the database. For a complete
  // list of available node type attributes, refer to the node type API
  // documentation at: http://api.drupal.org/api/HEAD/function/hook_node_info.

  // Insert default pre-defined RDF mapping into the database.
  $rdf_mappings = array(
    array(
      'type' => 'node',
      'bundle' => 'page',
      'mapping' => array(
        'rdftype' => array('foaf:Document'),
      ),
    ),
    array(
      'type' => 'node',
      'bundle' => 'event',
      'mapping' => array(
        'field_image' => array(
          'predicates' => array('og:image', 'rdfs:seeAlso'),
          'type' => 'rel',
        ),
        'tags_noticias' => array(
          'predicates' => array('dc:subject'),
          'type' => 'rel',
        ),
        'field_categories' => array(
          'predicates' => array('dc:subject'),
          'type' => 'rel',
        ),
      ),
    ),
    array(
      'type' => 'node',
      'bundle' => 'calendar',
      'mapping' => array(
        'field_image' => array(
          'predicates' => array('og:image', 'rdfs:seeAlso'),
          'type' => 'rel',
        ),
        'tags_noticias' => array(
          'predicates' => array('dc:subject'),
          'type' => 'rel',
        ),
        'field_categories' => array(
          'predicates' => array('dc:subject'),
          'type' => 'rel',
        ),
      ),
    ),
    array(
      'type' => 'node',
      'bundle' => 'noticia',
      'mapping' => array(
        'field_image' => array(
          'predicates' => array('og:image', 'rdfs:seeAlso'),
          'type' => 'rel',
        ),
        'tags_noticias' => array(
          'predicates' => array('dc:subject'),
          'type' => 'rel',
        ),
        'field_categories' => array(
          'predicates' => array('dc:subject'),
          'type' => 'rel',
        ),
        'field_audiencia' => array(
          'predicates' => array('dc:subject'),
          'type' => 'rel',
        ),
      ),
    ),
    array(
      'type' => 'node',
      'bundle' => 'accordion',
      'mapping' => array(
        'field_image' => array(
          'predicates' => array('og:image', 'rdfs:seeAlso'),
          'type' => 'rel',
        ),
      ),
    ),
    array(
      'type' => 'node',
      'bundle' => 'table',
      'mapping' => array(
        'field_image' => array(
          'predicates' => array('og:image', 'rdfs:seeAlso'),
          'type' => 'rel',
        ),
      ),
    ),
    array(
      'type' => 'node',
      'bundle' => 'slide',
      'mapping' => array(
        'field_image' => array(
          'predicates' => array('og:image', 'rdfs:seeAlso'),
          'type' => 'rel',
        ),
        'tags_noticias' => array(
          'predicates' => array('dc:subject'),
          'type' => 'rel',
        ),
        'field_categories' => array(
          'predicates' => array('dc:subject'),
          'type' => 'rel',
        ),
      ),
    ),
  );
  foreach ($rdf_mappings as $rdf_mapping) {
    rdf_mapping_save($rdf_mapping);
  }

  // Default "Basic page" to not be promoted and have comments disabled.
  variable_set('node_options_page', array('status'));
  variable_set('comment_page', COMMENT_NODE_HIDDEN);

  // Don't display date and author information for "Basic page" nodes by default.
  variable_set('node_submitted_page', FALSE);

  // Enable user picture support and set the default to a square thumbnail option.
  variable_set('user_pictures', '1');
  variable_set('user_picture_dimensions', '1024x1024');
  variable_set('user_picture_file_size', '800');
  variable_set('user_picture_style', 'thumbnail');

  // Allow visitor account creation with administrative approval.
  variable_set('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL);

  $dateEnd = date( "Y-m-d H:i:s", time() + ( 3600 * 24 ) );

    
    #CREANDO WEB FORM DE EJEMPLO
    $node = new stdClass();
    $node->type = 'webform';
    node_object_prepare($node);
    $node->title = 'Contact Us';
    $node->language = 'en';
    $node->body[LANGUAGE_NONE][0]['value']   = '';
    $node->body[LANGUAGE_NONE][0]['format']  = 'full_html';
    $node->uid = 1;
    $node->promote = 0;
    $node->comment = 0;

    // Create the webform components.
    $components = array(
      array(
      'name' => 'Gender',
      'form_key' => 'gender',
      'type' => 'select',
      'mandatory' => 1,
      'weight' => 0,
      'pid' => 0,
      'extra' => array(
        'title_display' => 'inline',
        'private' => 0,
        'items' => "Mrs|Mrs\nMiss|Miss\nMr|Mr",
        'aslist' => 1,
      ),
    ),
    array(
      'name' => 'Last name',
      'form_key' => 'name',
      'type' => 'textfield',
      'mandatory' => 1,
      'weight' => 5,
      'pid' => 0,
      'extra' => array(
        'title_display' => 'inline',
        'private' => 0,
      ),
    ),
    array(
      'name' => 'First name',
      'form_key' => 'first_name',
      'type' => 'textfield',
      'mandatory' => 1,
      'weight' => 10,
      'pid' => 0,
      'extra' => array(
        'title_display' => 'inline',
        'private' => 0,
      ),
    ),
    array(
      'name' => 'City',
      'form_key' => 'city',
      'type' => 'textfield',
      'mandatory' => 0,
      'weight' => 15,
      'pid' => 0,
      'extra' => array(
        'title_display' => 'inline',
        'private' => 0,
      ),
    ),
    array(
      'name' => 'Country',
      'form_key' => 'country',
      'type' => 'select',
      'mandatory' => 0,
      'weight' => 20,
      'pid' => 0,
      'extra' => array(
        'title_display' => 'inline',
        'private' => 0,
        'aslist' => 1,
        'options_source' => 'countries',
      ),
    ),
    array(
      'name' => 'Email address',
      'form_key' => 'email_address',
      'type' => 'email',
      'mandatory' => 1,
      'weight' => 25,
      'pid' => 0,
      'extra' => array(
        'title_display' => 'inline',
        'private' => 0,
      ),
    ),
    array(
      'name' => 'Subject',
      'form_key' => 'subject',
      'type' => 'select',
      'mandatory' => 1,
      'weight' => 30,
      'pid' => 0,
      'extra' => array(
        'title_display' => 'inline',
        'private' => 0,
        'items' => "s1|Subject 1\nother|Other",
        'aslist' => 1,
      ),
    ),
    array(
      'name' => 'Message',
      'form_key' => 'message',
      'type' => 'textarea',
      'mandatory' => 1,
      'weight' => 35,
      'pid' => 0,
      'extra' => array(
        'title_display' => 'inline',
        'private' => 0,
        ),
      ),
      array(
        'name' => 'Mandatory Fields',
        'form_key' => 'mandatory_fields',
        'type' => 'markup',
        'mandatory' => 0,
        'weight' => 40,
        'pid' => 0,
        'value' => 'Fields with * are mandatory',
        'extra' => array(
          'title_display' => 'inline',
          'private' => 0,
          'format'=> 'full_html',
        ),
      ),
    );

    // Setup notification email.
    $emails = array(
      array(
        'email' => 'somebody@example.tld',
        'subject' => 'default',
        'from_name' => 'default',
        'from_address' => 'default',
        'template' => 'default',
        'excluded_components' => array(),
      ),
    );

    // Attach the webform to the node.
    $node->webform = array(
      'confirmation' => '',
      'confirmation_format' => NULL,
      'redirect_url' => '',
      'status' => '1',
      'block' => '0',
      'teaser' => '0',
      'allow_draft' => '0',
      'auto_save' => '0',
      'submit_notice' => '1',
      'submit_text' => '',
      'submit_limit' => '-1', // User can submit more than once.
      'submit_interval' => '-1',
      'total_submit_limit' => '-1',
      'total_submit_interval' => '-1',
      'record_exists' => TRUE,
      'roles' => array(
        0 => '1', // Anonymous user can submit this webform.
      ),
      'emails' => $emails,
      'components' => $components,
    );

    // Save the node.
    node_save($node); 


  // Enable default permissions for system roles.
  $filtered_html_permission = filter_permission_name($filtered_html_format);
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', 'access comments', $filtered_html_permission));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', 'access comments', 'post comments', 'skip comment approval', $filtered_html_permission));

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  

  // Assign user 1 the "administrator" role.
  db_insert('menu_custom')
    ->fields(array('title' => "Menu Top Soy", 'menu_name' => "menu-menu-top-soy", "description" => "Uniandes menu top page" ))
    ->execute();
	
	db_insert('menu_custom')
    ->fields(array('title' => "Menu Top Volver", 'menu_name' => "menu-menu-top-volver", "description" => "Uniandes volver a institucional" ))
    ->execute();

  db_insert('menu_custom')
    ->fields(array('title' => "Menu Footer Principal", 'menu_name' => "menu-menu-footer-principal", "description" => "Uniandes menu footer principal" ))
    ->execute();
  db_insert('menu_custom')
    ->fields(array('title' => "Menu Footer Principal 2", 'menu_name' => "menu-menu-footer-principal-ingle", "description" => "Uniandes menu footer principal ingles" ))
    ->execute();

  $menu_soy = array( 
    array( "link_title" => t( "Aspirante" ), "link_path" => "http://uniandes.edu.co/es/soy/aspirante", "menu_name" => "menu-menu-top-soy" ),
    array( "link_title" => t( "Estudiante" ), "link_path" => "http://uniandes.edu.co/es/soy/aspirante", "menu_name" => "menu-menu-top-soy" ),
    array( "link_title" => t( "Egresado" ), "link_path" => "http://uniandes.edu.co/es/soy/aspirante", "menu_name" => "menu-menu-top-soy" ),
    array( "link_title" => t( "Profesor" ), "link_path" => "http://uniandes.edu.co/es/soy/aspirante", "menu_name" => "menu-menu-top-soy" ),
    array( "link_title" => t( "Empleado" ), "link_path" => "http://uniandes.edu.co/es/soy/aspirante", "menu_name" => "menu-menu-top-soy" ),
    array( "link_title" => t( "Visitante" ), "link_path" => "http://uniandes.edu.co/es/soy/aspirante", "menu_name" => "menu-menu-top-soy" ),
  );

  #CREATE MENUS BY ARRAYS
  foreach( $menu_soy as $item ){

    $item = array(
      'link_title' => $item[ "link_title" ],
      'link_path' => $item[ "link_path" ],
      'menu_name' => $item[ "menu_name" ],
      'expanded' => 1,
    );
    menu_link_save($item);

  }
  
  //crea menus
	$menu_back = array( 
		array( "link_title" => t( "Volver a institucional" ), "link_path" => "http://uniandes.edu.co", "menu_name" => "menu-menu-top-volver" ),
	);
	foreach($menu_back as $item){
		$item = array(
			'link_title' => $item[ "link_title" ],
			'link_path' => $item[ "link_path" ],
			'menu_name' => $item[ "menu_name" ],
			'expanded' => 1,
		);
		menu_link_save($item);
	}

	//crea menus
	$main_menu = array( 
		array( "link_title" => t( "Menú test 1" ), "link_path" => "<front>", "menu_name" => "main-menu" ),
		array( "link_title" => t( "Menú test 2" ), "link_path" => "<front>", "menu_name" => "main-menu" ),
		array( "link_title" => t( "Menú test 3" ), "link_path" => "<front>", "menu_name" => "main-menu" ),
		array( "link_title" => t( "Menú test 4" ), "link_path" => "<front>", "menu_name" => "main-menu" ),
	);
	foreach($main_menu as $item){
		$item = array(
			'link_title' => $item[ "link_title" ],
			'link_path' => $item[ "link_path" ],
			'menu_name' => $item[ "menu_name" ],
			'expanded' => 1,
		);
		menu_link_save($item);
	}
  

$links = array(
  array(
    array(
      'link_title' => 'Normatividad Institucional',
      'link_path' => '<nolink>',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      ),
    array(
      'link_title' => ' Enlaces Rápidos ',
      'link_path' => '<nolink>',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 1,
      'expanded' => 0,
      ),
    ),
  );


$item = ''; 
foreach ($links as $layer1) {
  foreach ($layer1 as $link) {
    // Build an array of menu link 
    $item = array(
      'link_path' => $link['link_path'],
      'link_title' => $link['link_title'],
      'menu_name' => $link['menu_name'],
      'weight' => $link['weight'],
      'expanded' => $link['expanded'],
      );
    // Look the table first if the data does exist
    $exists = db_query("SELECT mlid from {menu_links} WHERE link_title=:link_title AND link_path=:link_path", array(':link_title' =>  $link['link_title'], ':link_path' => $link['link_path']))->fetchField();
    // Save the record if the data does not exist
    if (!$exists) {  
      menu_link_save($item);
    }
  }
}


$links = array(
  array(
    array(
      'link_title' => 'INSTITUTIONAL REGULATIONS',
      'link_path' => '<nolink>',
      'menu_name' => 'menu-menu-footer-principal-ingle',
      'weight' => 0,
      'expanded' => 0,
      ),
    array(
      'link_title' => 'QUICK LINKS',
      'link_path' => '<nolink>',
      'menu_name' => 'menu-menu-footer-principal-ingle',
      'weight' => 1,
      'expanded' => 0,
      ),
    ),
  );


$item = ''; 
foreach ($links as $layer1) {
  foreach ($layer1 as $link) {
    // Build an array of menu link 
    $item = array(
      'link_path' => $link['link_path'],
      'link_title' => $link['link_title'],
      'menu_name' => $link['menu_name'],
      'weight' => $link['weight'],
      'expanded' => $link['expanded'],
      );
    // Look the table first if the data does exist
    $exists = db_query("SELECT mlid from {menu_links} WHERE link_title=:link_title AND link_path=:link_path", array(':link_title' =>  $link['link_title'], ':link_path' => $link['link_path']))->fetchField();
    // Save the record if the data does not exist
    if (!$exists) {  
      menu_link_save($item);
    }
  }
}


$menu = menu_tree_all_data( "menu-menu-footer-principal");
foreach( $menu as $item ){ 
  $mlid=$item['link']['mlid'];
  $title=$item['link']['link_title'];    
  $pos=strpos($title, "Normatividad");
  if($pos!==false){
    $normatividad=$mlid;
  }else{
    $enlaces=$mlid;
  }
}      


$normatividad;
$enlaces;


$links = array(
  array(
    array(
      'link_title' => 'Derechos pecunarios',
      'link_path' => 'https://uniandes.edu.co/derechos-pecuniarios/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ), 

    array(
      'link_title' => 'Actos internos e incremento',
      'link_path' => 'https://uniandes.edu.co/sites/default/files/Acuerdo9-PresupuestodeRentasyGastos2016.pdf',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ),
    array(
      'link_title' => 'Porcentaje de incremento',
      'link_path' => 'https://uniandes.edu.co/sites/default/files/Acuerdo9-PresupuestodeRentasyGastos2016.pdf',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ), 

    array(
      'link_title' => 'Estatuto general',
      'link_path' => 'https://secretariageneral.uniandes.edu.co/index.php/en/normatividad-institucional/2-uncategorised/69-estatutos-de-la-universidad',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ),

    array(
      'link_title' => 'Reglamentos de estudiantes',
      'link_path' => 'https://secretariageneral.uniandes.edu.co/index.php/es/component/content/article/11-asuntos-estudiantiles/24-reglamentos-estudiantiles',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ), 

    array(
      'link_title' => 'Estatuto docente',
      'link_path' => 'https://uniandes.edu.co/estatuto-docente/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ),
    array(
      'link_title' => 'Bienestar',
      'link_path' => 'https://uniandes.edu.co/bienestar/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ), 

    array(
      'link_title' => 'Ley de transparencia',
      'link_path' => 'https://uniandes.edu.co/ley-de-transparencia/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ),
    array(
      'link_title' => 'Uso de datos personales',
      'link_path' => 'https://uniandes.edu.co/uso-de-datos-personales/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ),
    
    ),
  );



$item = ''; 
foreach ($links as $layer1) {
  foreach ($layer1 as $link) {
    // Build an array of menu link 
    $item = array(
      'link_path' => $link['link_path'],
      'link_title' => $link['link_title'],
      'menu_name' => $link['menu_name'],
      'weight' => $link['weight'],
      'expanded' => $link['expanded'],
      'plid' => $link['plid'],
      );
    // Look the table first if the data does exist
    $exists = db_query("SELECT mlid from {menu_links} WHERE link_title=:link_title AND link_path=:link_path", array(':link_title' =>  $link['link_title'], ':link_path' => $link['link_path']))->fetchField();
    // Save the record if the data does not exist
    if (!$exists) {  
      menu_link_save($item);
    }
  }
}


$links = array(
  array(
    array(
      'link_title' => 'Preguntas frecuentes',
      'link_path' => 'https://uniandes.edu.co/preguntas-frecuentes/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      ), 

    array(
      'link_title' => 'Convivencia y transparencia',
      'link_path' => 'https://uniandes.edu.co/es/convivencia-0/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      ),
    array(
      'link_title' => 'Mapa del sitio',
      'link_path' => 'https://uniandes.edu.co/sitemap/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      ), 

    array(
      'link_title' => 'Emergencias: Extensión 0000',
      'link_path' => 'https://gerenciacampus.uniandes.edu.co/Areas-funcionales/Servicios-medicos-y-seguridad-industrial/Emergencias/Sistema-de-Atencion-de-Emergencias-SAE',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,


      ),

    array(
      'link_title' => 'Centro de español',
      'link_path' => 'http://programadeescritura.uniandes.edu.co/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,

      ), 

    array(
      'link_title' => 'Conecta-TE',
      'link_path' => 'https://conectate.uniandes.edu.co/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      
      ),
    array(
      'link_title' => 'Noticias',
      'link_path' => 'https://uniandes.edu.co/noticias/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      ), 

    array(
      'link_title' => 'Multimedia',
      'link_path' => 'https://uniandes.edu.co/multimedia/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      ),
    array(
      'link_title' => 'Eventos destacados',
      'link_path' => 'https://uniandes.edu.co/eventos/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      ),
    
    ),
  );



$item = ''; 
foreach ($links as $layer1) {
  foreach ($layer1 as $link) {
    // Build an array of menu link 
    $item = array(
      'link_path' => $link['link_path'],
      'link_title' => $link['link_title'],
      'menu_name' => $link['menu_name'],
      'weight' => $link['weight'],
      'expanded' => $link['expanded'],
      'plid' => $link['plid'],
      );
    // Look the table first if the data does exist
    $exists = db_query("SELECT mlid from {menu_links} WHERE link_title=:link_title AND link_path=:link_path", array(':link_title' =>  $link['link_title'], ':link_path' => $link['link_path']))->fetchField();
    // Save the record if the data does not exist
    if (!$exists) {  
      menu_link_save($item);
    }
  }
}






$menu = menu_tree_all_data( "menu-menu-footer-principal-ingle");
foreach( $menu as $item ){ 
  $mlid=$item['link']['mlid'];
  $title=$item['link']['link_title'];    
  $pos=strpos($title, "REGULATIONS");
  if($pos!==false){
    $normatividad=$mlid;
  }else{
    $enlaces=$mlid;
  }
}      


$normatividad;
$enlaces;


$links = array(
  array(
    array(
      'link_title' => 'Pecuniary rights',
      'link_path' => 'https://uniandes.edu.co/en/pecuniary-rights/',
      'menu_name' => 'menu-menu-footer-principal-ingle',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ), 

    array(
      'link_title' => 'Internal acts and fee increase',
      'link_path' => 'https://uniandes.edu.co/sites/default/files/Acuerdo9-PresupuestodeRentasyGastos2016.pdf',
      'menu_name' => 'menu-menu-footer-principal-ingle',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ),
    array(
      'link_title' => 'Fees increase percentage',
      'link_path' => 'https://uniandes.edu.co/sites/default/files/Acuerdo9-PresupuestodeRentasyGastos2016.pdf',
      'menu_name' => 'menu-menu-footer-principal-ingle',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ), 

    array(
      'link_title' => 'General Statute',
      'link_path' => 'https://secretariageneral.uniandes.edu.co/index.php/en/normatividad-institucional/2-uncategorised/69-estatutos-de-la-universidad',
      'menu_name' => 'menu-menu-footer-principal-ingle',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ),

    array(
      'link_title' => 'Student regulations',
      'link_path' => 'https://secretariageneral.uniandes.edu.co/index.php/es/component/content/article/11-asuntos-estudiantiles/24-reglamentos-estudiantiles',
      'menu_name' => 'menu-menu-footer-principal-ingle',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ), 

    array(
      'link_title' => 'Teacher Statute',
      'link_path' => 'https://secretariageneral.uniandes.edu.co/index.php/es/normatividad-institucional/20-normatividad-institucional/76-estatuto-profesoral',
      'menu_name' => 'menu-menu-footer-principal-ingle',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ),
    array(
      'link_title' => 'Wellness',
      'link_path' => 'https://uniandes.edu.co/en/wellness/',
      'menu_name' => 'menu-menu-footer-principal-ingle',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ), 

    array(
      'link_title' => 'Transparency law',
      'link_path' => 'https://uniandes.edu.co/en/transparency-law/',
      'menu_name' => 'menu-menu-footer-principal-ingle',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ),
    array(
      'link_title' => 'Use of personal data',
      'link_path' => 'https://uniandes.edu.co/en/use-of-personal-data/',
      'menu_name' => 'menu-menu-footer-principal-ingle',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$normatividad,
      ),
    
    ),
  );



$item = ''; 
foreach ($links as $layer1) {
  foreach ($layer1 as $link) {
    // Build an array of menu link 
    $item = array(
      'link_path' => $link['link_path'],
      'link_title' => $link['link_title'],
      'menu_name' => $link['menu_name'],
      'weight' => $link['weight'],
      'expanded' => $link['expanded'],
      'plid' => $link['plid'],
      );
    // Look the table first if the data does exist
    $exists = db_query("SELECT mlid from {menu_links} WHERE link_title=:link_title AND link_path=:link_path", array(':link_title' =>  $link['link_title'], ':link_path' => $link['link_path']))->fetchField();
    // Save the record if the data does not exist
    if (!$exists) {  
      menu_link_save($item);
    }
  }
}


$links = array(
  array(
    array(
      'link_title' => 'FAQ',
      'link_path' => 'https://uniandes.edu.co/en/faq/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      ), 

    array(
      'link_title' => 'Contact Us',
      'link_path' => 'https://uniandes.edu.co/en/contact-us/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      ),
    array(
      'link_title' => 'Site Map',
      'link_path' => 'https://uniandes.edu.co/sitemap/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      ), 

    array(
      'link_title' => 'Communications and Brand',
      'link_path' => 'https://uniandes.edu.co/en/communicatons-and-branch/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,


      ),

    array(
      'link_title' => 'Emergencies: Extension 0000',
      'link_path' => 'https://gerenciacampus.uniandes.edu.co/Areas-funcionales/Servicios-medicos-y-seguridad-industrial/Emergencias/Sistema-de-Atencion-de-Emergencias-SAE',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,

      ), 

    array(
      'link_title' => 'Spanish Center',
      'link_path' => 'http://programadeescritura.uniandes.edu.co/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      
      ),
    array(
      'link_title' => 'Conect-TE',
      'link_path' => 'https://conectate.uniandes.edu.co/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      ), 

    array(
      'link_title' => 'News',
      'link_path' => 'https://uniandes.edu.co/en/news/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      ),
    array(
      'link_title' => 'Multimedia',
      'link_path' => 'https://uniandes.edu.co/en/multimedia/',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      ),
    array(
      'link_title' => 'Featured Events',
      'link_path' => 'https://uniandes.edu.co/en/events',
      'menu_name' => 'menu-menu-footer-principal',
      'weight' => 0,
      'expanded' => 0,
      'plid' =>$enlaces,
      ),
    
    ),
  );



$item = ''; 
foreach ($links as $layer1) {
  foreach ($layer1 as $link) {
    // Build an array of menu link 
    $item = array(
      'link_path' => $link['link_path'],
      'link_title' => $link['link_title'],
      'menu_name' => $link['menu_name'],
      'weight' => $link['weight'],
      'expanded' => $link['expanded'],
      'plid' => $link['plid'],
      );
    // Look the table first if the data does exist
    $exists = db_query("SELECT mlid from {menu_links} WHERE link_title=:link_title AND link_path=:link_path", array(':link_title' =>  $link['link_title'], ':link_path' => $link['link_path']))->fetchField();
    // Save the record if the data does not exist
    if (!$exists) {  
      menu_link_save($item);
    }
  }
}


  

  // Update the menu router information.
  menu_rebuild();

  // Enable the admin theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'seven')
    ->execute();
  variable_set('admin_theme', 'seven');
  variable_set('node_admin_theme', '1');
  variable_set('cron_safe_threshold', 0);


}


